drop program 1_amj_get_prompt go
create program 1_amj_get_prompt

prompt 
	"Output to File/Printer/MINE" = "MINE"
	, "Activity Date (mmddyyyy):" = "YESTERDAY"           ;* Please select your desired activity date filter.
	, "Billing Entity:" = VALUE("-99.99             ")    ;* Please select your desired billing entity filter(s).
	, "Financial Class:" = VALUE("ALL                ")   ;* Please select your desired financial class filter(s)
	, "Health Plan:" = VALUE("ALL                ")       ;* Please select your desired health plan filter(s).
	, "Rounding:" = "1       "                            ;* Please select your desired rouding filter. 

with OUTDEV, ACTIVITYDATE, BENTITY, FINCLASS, HEALTHPLAN, ROUND

;select * from encntr_alias ea
;plan ea
;where ea.alias = "202105513"


free record arg_rec
record arg_rec
(
	1 cnt 			= i4
	1 objarray[5]	
		2 sarg_value	= vc
)
;arg_rec->objarray[d.seq ].sarg_value
;END OF ALL MODCONTROL BLOCKS
; ********************************************************************************************************************************/
 declare LIST_IN      = i4 with protect, constant(1)
 declare LIST_NOT_IN  = i4 with protect, constant(2)
/********************************************************************************************************************************
 Subroutine
 ********************************************************************************************************************************/
 declare GetPromptList(which_prompt = i4, which_column = vc, which_option = i4 (value, LIST_IN)) = vc
 subroutine GetPromptList(which_prompt, which_column, which_option)
   declare my_parser      = vc with noconstant("0=0"), private
   declare prompt_reflect = vc with noconstant(reflect(parameter(which_prompt, 0))), private
   declare _value         = f8 with noconstant(0.0), private
   declare count          = i4 with noconstant(0), private
   declare option_str     = vc with noconstant(""), private
 
   if(which_option <= LIST_IN)
       set option_str = " IN ("
   elseif(which_option >= LIST_NOT_IN)
       set option_str = " NOT IN ("
   endif
 
   if(prompt_reflect = "C1") ;Selected Any(*)
     set my_parser = "1=1"
     ;if 
   elseif(prompt_reflect = "F8") ;Select one item
     set _value = parameter(which_prompt, 1)
     if(_value > 0)
       set my_parser = build(which_column, option_str, _value, ")")
       else
         set my_parser = "1=1"
     endif
   elseif(substring(1, 1, prompt_reflect) = "L") ;select multiple items
     set count = cnvtint(substring(2, textlen(prompt_reflect) - 1, prompt_reflect))
     call echo(build2("count: ", count))
     call echo(build2("textlen(prompt_reflect): ", textlen(prompt_reflect)))
     call echo(build2("prompt_reflect: ", prompt_reflect))
     call echo(build2("prompt_reflect: ", prompt_reflect))
     set my_parser = build2(which_column, option_str)
     for(i = 1 to count)
       set my_parser = build(my_parser, parameter(which_prompt, i), ",")
       call echo(build2("my parser:: ", my_parser))
      
     endfor
     
   ;  for(i = 1 to count)
    ;   set this_value = parameter(which_prompt, i)
      ; call echo(build2("my this_value:: ", this_value))
      ; if (this_value = 0.0)
       
      ; 	set zz = "Unassigned Billing Entity"
      ; endif
   ;  endfor     
     set my_parser = replace(my_parser, ",", ")", 2)
   endif
   return(my_parser)
 end ;subroutine GetPromptList
 
 declare GetStrPromptLIst(which_prompt = i4, which_column = vc, which_option = i4 (value, LIST_IN)) = vc
 subroutine GetStrPromptLIst(which_prompt, which_column, which_option)
   declare my_parser      = vc with noconstant("0=0"), private
   declare prompt_reflect = vc with noconstant(reflect(parameter(which_prompt, 0))), private
   declare _value         = i4 with noconstant(0.0), private
   declare count          = i4 with noconstant(0), private
   declare option_str     = vc with noconstant(""), private
 
   if(which_option <= LIST_IN)
       set option_str = " IN ("
   elseif(which_option >= LIST_NOT_IN)
       set option_str = " NOT IN ("
   endif
 
   if(prompt_reflect = "C1") ;Selected Any(*)
     set my_parser = "1=1"
   elseif(prompt_reflect = "I4") ;Select one item (integer)
     set _value = parameter(which_prompt, 1)
     if(_value > 0)
       set my_parser = build(which_column, option_str, "'", _value, "')")  ;qoutes to make string value
       else
         set my_parser = "1=1"
     endif
   elseif(substring(1, 1, prompt_reflect) = "L") ;select multiple items
     set count = cnvtint(substring(2, textlen(prompt_reflect) - 1, prompt_reflect))
     set my_parser = build2(which_column, option_str)
     for(i = 1 to count)
       set my_parser = build(my_parser, "'", parameter(which_prompt, i), "',")  ;quotes to make string values
     endfor
     set my_parser = replace(my_parser, ",", ")", 2)
   endif
   return(my_parser)
 end ;subroutine GetStrPromptLIst
 
;END %i cclsource:sc_cps_get_prompt_list.inc
 

set be_parser          = GetPromptList(3, "rdbe.rc_d_billing_entity_id")  ;005

set be_parser          = GetPromptList(3, "be.billing_entity_id")  ;005
call echo(be_parser)



select into $outdev 
* from 
billing_entity be
where parser(be_parser)
with nocounter, format, separator = " ", maxrec= 100, time = 10


;
;select * from billing_entity be
;plan be 
;where be.billing_entity_id =           694372633.00
;call echo("END")
;call echo(format(enddate,";;Q"))
;SET STARTDATE = CNVTDATE($BEGDATE)
;SET ENDDATE= CNVTDATE($ENDDT)
 
;declare subroutines
declare format_gl_sub_parameter(gl_sub_param = vc) = vc with private
 
; 
;;declare variables
;declare company_name_lookup = vc with private, noconstant("*")
;declare company_unit_lookup = vc with private, noconstant("*")
;declare account_name_lookup = vc with private, noconstant("*")
;declare account_unit_lookup = vc with private, noconstant("*")
;declare CS18649_payment_cd = f8
;declare CS18649_adj_cd = f8
;declare CS18649_charge_cd = f8
; 
;;set variables
;set CS18649_payment_cd = uar_get_code_by("DISPLAYKEY",18649,"PAYMENT")
;set CS18649_adj_cd = uar_get_code_by("DISPLAYKEY",18649,"ADJUSTMENT")
;set CS18649_charge_cd = uar_get_code_by("DISPLAYKEY",18649,"CHARGE")
; 
;declare auth_cd = f8
;declare phys_dept_alias_pool_cd = f8
; 
;set auth_cd = uar_get_code_by("DISPLAYKEY",8,"AUTHVERIFIED")
;set phys_dept_alias_pool_cd = uar_get_code_by("DISPLAYKEY",263,"PHYSICIANDEPARTMENT")
; 
;if (cnvtupper(trim($COUNIT)) != "")
;	set company_unit_lookup = format_gl_sub_parameter($COUNIT)
;else
;	set company_unit_lookup = "*"
;endif
;if (cnvtupper(trim($ACCTNAME)) != "")
;	set account_name_lookup = format_gl_sub_parameter($ACCTNAME)
;else
;	set account_name_lookup = "*"
;endif
;if (cnvtupper(trim($ACCTUNIT)) != "")
;	set account_unit_lookup = format_gl_sub_parameter($ACCTUNIT)
;else
;	set account_unit_lookup = "*"
;endif
;if (cnvtupper(trim($COMPALIAS)) != "")
;	set company_name_lookup = format_gl_sub_parameter($COMPALIAS)
;else
;	set company_name_lookup = "*"
;endif
;declare be_parser       = vc with noconstant(" "), public ;005
;set be_parser          = GetPromptList(10, "a.billing_entity_id")  ;005
; 
;declare all_ind = c1 with Constant(substring(1,1,reflect(parameter(10,0)))),Public ;005
; 
;record get_billent_reply
; (
;  1 qual_cnt = i4
;   1 qual [*]
;     2 billing_entity_id = f8
;     2 be_name = vc
; 
; )


end go
