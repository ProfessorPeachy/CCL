drop program ed_assignments go
create program ed_assignments
 
prompt
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.
	, "Begin Date" = "CURDATE"
	, "End Date" = "CURDATE"
	, "Tracking Grop" = 0
 
with OUTDEV, BEGINDATE, ENDDATE, TRACKING_GROUP_CD
 
 
/**********************************************************************************************************************************
              Purpose:	Basic Patient Demographics and Tracking Events for APMD
          Application:	FirstNet
  Exectuion Locations:	Operations
            Request #:  NA
      Translated From:	Not Translated
        Special Notes:
				        thc1_amd_ed_orders is the name of the program
				          "MINE" represents output, but is not implemented at this time
				          "BOM-1|standard" means the Beginning of the Month, 1 Month ago (last month)
				          "EOM-1|standard" means the End of the month, 1 Month ago (end of last month)
				          12345.0 is the tracking group to execute the script for.
/**********************************************************************************************************************************
 
                                           MODIFICATION CONTROL LOG
 
***********************************************************************************************************************************
   Mod #    Date           Engineer             Description
   1        10/14/2016		Amelia Jamison		Initial Release
 
**********************************************************************************************************************************/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
                                                         DECLARATIONS
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
declare Section_Start_Dt_Tm = dq8 with protect, noconstant(cnvtdatetime(curdate, curtime3))
call echo(concat("DECLARATIONS...", format(cnvtdatetime(curdate, curtime3), "@SHORTDATETIME")))
/*=================================================================================================================================
 
                                                           CONSTANTS
 
=================================================================================================================================*/
/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       Programming Constants     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
DECLARE FILE_DIRECTORY = VC WITH PROTECT, CONSTANT(build2(trim(logical("CCLUSERDIR")), "/"))  ;Must be full path with / at end
DECLARE APMD_ED_ASSIGNMENTS_FILE = VC WITH PROTECT, CONSTANT(CONCAT(FILE_DIRECTORY, 'ed_assignments.dat'))
 
;Medical Record Number and Chart Number Constants
DECLARE FIN_NBR_319_CV = F8 WITH PROTECT, CONSTANT(UAR_GET_CODE_BY("DISPLAYKEY", 319, "FINNBR"))
 
;Provider Role Pref (for assignments)
DECLARE PROVIDER_ROLE_ASSOC_20500_CV = F8 WITH PROTECT, CONSTANT(UAR_GET_CODE_BY("MEANING", 20500, "PRVROLEASSOC"))
 
;Provider Role Parsing
DECLARE Comp_Pref = VC WITH PROTECT, NOCONSTANT('') ;The compiled Component Pref
DECLARE Len = I4 WITH PROTECT, NOCONSTANT(0) ;The length of the pref on the table
DECLARE Counter = I4 WITH PROTECT, NOCONSTANT(0) ;The first Counter
DECLARE Counter1 = I4 WITH PROTECT, NOCONSTANT(0) ;The second counter
DECLARE Counter2 = I4 WITH PROTECT, NOCONSTANT(0) ;The third counter
DECLARE Pri_Doc_Role = F8 WITH PROTECT, NOCONSTANT(0.0) ;ID of the primary doctor role type
DECLARE Sec_Doc_Role = F8 WITH PROTECT, NOCONSTANT(0.0) ;ID of the seconday doctor role type
DECLARE Pri_Nur_Role = F8 WITH PROTECT, NOCONSTANT(0.0) ;ID of the primary nurse role type
DECLARE Sec_Nur_Role = F8 WITH PROTECT, NOCONSTANT(0.0) ;ID of the secondary nurse role type
 
;Delimiters
DECLARE SEPARATOR = VC WITH PROTECT, CONSTANT('"|"')
DECLARE ROW_START = VC WITH PROTECT, CONSTANT('"')
DECLARE ROW_TERMINATE = VC WITH PROTECT, CONSTANT('"')
 
/*=================================================================================================================================
 
                                                            VARIABLES
 
=================================================================================================================================*/
DECLARE Begin_Date = DQ8 WITH PROTECT    ;The start date for the report
DECLARE End_Date = DQ8 WITH PROTECT      ;The final date for the report
DECLARE Temp_Date_DQ8 = DQ8 WITH PUBLIC     ;Temporary date for processing funtions
DECLARE Display_Line = VC WITH PROTECT, NOCONSTANT('') ;Report Display
 
/*=================================================================================================================================
 
                                                           INITIALIZATION
 
=================================================================================================================================*/
CALL ECHO(CONCAT("INITIALIZATION...", FORMAT(CNVTDATETIME(CURDATE, CURTIME3), "@SHORTDATETIME")))
/*----------------------------------------------------  Begin_Date and End_Date -------------------------------------------------*/
execute thc1_apmd_date_conversion $BEGINDATE, "BOD" ;Date, Beginning of Day
SET Begin_Date = Temp_Date_DQ8
execute thc1_apmd_date_conversion $ENDDATE, "EOD" ;Date parameter, End of Day
SET End_Date = Temp_Date_DQ8
 
CALL ECHO(CONCAT("VARIABLE AND CONSTANTS Runtime: ",
                 TRIM(CNVTSTRING(DATETIMEDIFF(CNVTDATETIME(CURDATE, CURTIME3), Section_Start_Dt_Tm, 5)), 3),
                 " seconds"))
 
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
                                                      ASSIGNMENTS SECTION
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
CALL ECHO(CONCAT("ASSIGNMENTS SECTION...", FORMAT(CNVTDATETIME(CURDATE, CURTIME3), "@SHORTDATETIME")))
 
/*=================================================================================================================================
 
                                                       ASSIGNMENTS QUERY
 
=================================================================================================================================*/
SET Section_Start_Dt_Tm = CNVTDATETIME(CURDATE, CURTIME3)
CALL ECHO(CONCAT("ASSIGNMENTS QUERY...", FORMAT(CNVTDATETIME(CURDATE, CURTIME3), "@SHORTDATETIME")))
 
SELECT INTO VALUE(APMD_ED_ASSIGNMENTS_FILE)
   TC.CHECKIN_ID,
   TC.CHECKIN_DT_TM,
   TC.CHECKOUT_DT_TM,
   ASSIGN_DATE_TIME = FORMAT(TPR.ASSIGN_DT_TM, "@SHORTDATETIME"),
   TPFS.COMP_PREF,
   TP.TRACKING_PRSNL_TASK_ID,
   TP.DEF_ENCNTR_PRSNL_R_CD,
   DEF_ENCNTR_PRSNL_R_DISP = UAR_GET_CODE_DISPLAY(TP.DEF_ENCNTR_PRSNL_R_CD),
   P.NAME_FULL_FORMATTED,
   POS = UAR_GET_CODE_DISPLAY(P.POSITION_CD),
   FIN = CNVTALIAS(FIN.ALIAS, FIN.ALIAS_POOL_CD)
 
FROM
   TRACKING_CHECKIN TC,
   TRACKING_ITEM TI,
   TRACKING_PRV_RELN TPR,
   TRACKING_PRSNL TP,
;   TRACK_REFERENCE TR,
   TRACK_PREFS TPFS,
   PRSNL P,
   ENCNTR_ALIAS FIN
 
PLAN TC WHERE
   TC.CHECKIN_DT_TM >= CNVTDATETIME(Begin_Date)
   AND TC.CHECKIN_DT_TM <= CNVTDATETIME(End_Date)
   AND TC.TRACKING_GROUP_CD = $TRACKING_GROUP_CD
   AND TC.ACTIVE_IND = 1
 
JOIN TI WHERE
   TI.TRACKING_ID = TC.TRACKING_ID
;   AND TI.ENCNTR_ID IN(199538611.00,  199537797.00, 199538595.00, 199537456.00)
   AND TI.ACTIVE_IND = 1
 
JOIN TPR WHERE
   TPR.TRACKING_ID = TI.TRACKING_ID
 
JOIN P WHERE
   P.PERSON_ID = TPR.TRACKING_PROVIDER_ID
 
JOIN TP WHERE
   TP.PERSON_ID = TPR.TRACKING_PROVIDER_ID
   AND TP.TRACKING_PRSNL_TASK_ID > 0
   AND ( TP.TRACKING_GROUP_CD +0 = TC.TRACKING_GROUP_CD
       OR
        TC.TRACKING_GROUP_CD = 0.0 )
;JOIN TR WHERE ;(Alternate Role)
;   TR.TRACKING_REF_ID = TP.TRACKING_PRSNL_TASK_ID
 
JOIN TPFS WHERE
   TPFS.COMP_NAME_UNQ = CONCAT(TRIM(CNVTSTRING(TP.TRACKING_GROUP_CD)), ";", TRIM(CNVTSTRING(PROVIDER_ROLE_ASSOC_20500_CV)))
 
JOIN FIN WHERE
   FIN.ENCNTR_ID = OUTERJOIN(TI.ENCNTR_ID)
   AND FIN.ENCNTR_ALIAS_TYPE_CD = OUTERJOIN(FIN_NBR_319_CV)
   AND FIN.ACTIVE_IND = OUTERJOIN(1)
   AND FIN.BEG_EFFECTIVE_DT_TM <= OUTERJOIN(CNVTDATETIME(CURDATE, CURTIME))
   AND FIN.END_EFFECTIVE_DT_TM >= OUTERJOIN(CNVTDATETIME(CURDATE, CURTIME))
 
ORDER BY TI.ENCNTR_ID, TC.CHECKIN_DT_TM
 
HEAD REPORT
  Display_Line = CONCAT(ROW_START, "PATIENT_CHART_NUMBER",
                        SEPARATOR, "ASSIGN_DATE_TIME",
                        SEPARATOR, "DEFAULT_RELATIONSHIP",
                        SEPARATOR, "PROVIDER_NAME",
                        SEPARATOR, "PROVIDER_POSITION",
                        SEPARATOR, "PROVIDER_ASSIGNMENT",
                        ROW_TERMINATE)
  COL 0  Display_Line
  ROW +1
 
DETAIL
 ;Assigment Definitions
 Len = TEXTLEN(TPFS.COMP_PREF)
 Counter = FINDSTRING(";", TPFS.COMP_PREF)
 Pri_Doc_Role = CNVTREAL(SUBSTRING(1, Counter - 1,  TPFS.COMP_PREF))
 Counter1 = FINDSTRING(";", TPFS.COMP_PREF, Counter + 1)
 Sec_Doc_Role = CNVTREAL(SUBSTRING(Counter + 1, Counter1 - Counter - 1,  TPFS.COMP_PREF))
 Counter2 = FINDSTRING(";", TPFS.COMP_PREF, Counter1 + 1)
 Pri_Nur_Role = CNVTREAL(SUBSTRING(Counter1 + 1, Counter2 - Counter1 - 1, TPFS.COMP_PREF))
 Sec_Nur_Role = CNVTREAL(SUBSTRING(Counter2 + 1, Len - Counter2, TPFS.COMP_PREF))
 
 CASE (TP.TRACKING_PRSNL_TASK_ID)
  OF Pri_Doc_Role : Comp_Pref = "Primary Doctor"
  OF Sec_Doc_Role : Comp_Pref = "Secondary Doctor"
  OF Pri_Nur_Role : Comp_Pref = "Primary Nurse"
  OF Sec_Nur_Role : Comp_Pref = "Secondary Nurse"
 ENDCASE
 
 ;Output Display
 Display_Line = BUILD(ROW_START, CNVTALIAS(FIN.ALIAS, FIN.ALIAS_POOL_CD),
                      SEPARATOR, FORMAT(TPR.ASSIGN_DT_TM, "@SHORTDATETIMENOSEC"),
                      SEPARATOR, UAR_GET_CODE_DISPLAY(TP.DEF_ENCNTR_PRSNL_R_CD),
                      SEPARATOR, P.NAME_FULL_FORMATTED,
                      SEPARATOR, UAR_GET_CODE_DISPLAY(P.POSITION_CD),
                      SEPARATOR, Comp_Pref,
                      ROW_TERMINATE)
 COL 0  Display_Line
 ROW +1
WITH MAXROW = 1, MAXCOL = 32000, NOFORMFEED, FORMAT = UNDEFINED, NULLREPORT
 
CALL ECHO(CONCAT("ASSIGNMENTS QUERY Runtime: ",
                 TRIM(CNVTSTRING(DATETIMEDIFF(CNVTDATETIME(CURDATE, CURTIME3), Section_Start_Dt_Tm, 5)), 3),
                 " seconds"))
 
CALL ECHO(BUILD2("FINDFILE: APMD_ED_ASSIGNMENTS_FILE ", APMD_ED_ASSIGNMENTS_FILE, " -->",FINDFILE(APMD_ED_ASSIGNMENTS_FILE)) )
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
                                                 END
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
IF (VALIDATE(REPLY->OPS_EVENT) AND VALIDATE(REQUEST->OUTPUT_DIST) AND VALIDATE (REPLY->STATUS_DATA->STATUS))
 ;This code executes inside operations
 ;Declares a successful run
 SET REPLY->STATUS_DATA->STATUS = "S"
ENDIF
 
END GO
 
 
