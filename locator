drop program thc1_apmd_ed_locator go
create program thc1_apmd_ed_locator
 
prompt
	"Output to File/Printer/MINE" = "MINE"   ;* Enter or select the printer or file name to send this report to.
	, "Begin Date" = "CURDATE"
	, "End Date" = "CURDATE"
	, "Tracking Grop" = 0
 
with OUTDEV, BEGINDATE, ENDDATE, TRACKING_GROUP_CD
 
 
/**********************************************************************************************************************************
              Purpose:	Basic Patient Demographics and Tracking Events for APMD
          Application:	FirstNet
  Exectuion Locations:	Operations
            Request #:  NA
      Translated From:	Not Translated
        Special Notes:
/**********************************************************************************************************************************
 
                                           MODIFICATION CONTROL LOG
 
***********************************************************************************************************************************
   Mod #    Date           Engineer             Description
   -----    -------------  ------------------   -----------------------------------------------------------------------------------
   1        10/14/2016		Amelia Jamison		Initial Release
 
**********************************************************************************************************************************/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
                                                         DECLARATIONS
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
declare Section_Start_Dt_Tm = dq8 with protect, noconstant(cnvtdatetime(curdate, curtime3))
call echo(concat("DECLARATIONS...", format(cnvtdatetime(curdate, curtime3), "@SHORTDATETIME")))
/*=================================================================================================================================
 
                                                           CONSTANTS
 
=================================================================================================================================*/
/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       Programming Constants     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
DECLARE FILE_DIRECTORY = VC WITH PROTECT, CONSTANT(build2(trim(logical("CCLUSERDIR")), "/"))  ;Must be full path with / at end
DECLARE APMD_ED_LOCATOR_FILE = VC WITH PROTECT, CONSTANT(CONCAT(FILE_DIRECTORY,  'apmd_ed_locator.dat'))
 
;Medical Record Number and Chart Number Constants
DECLARE FIN_NBR_319_CV = F8 WITH PROTECT, CONSTANT(UAR_GET_CODE_BY("DISPLAYKEY", 319, "FINNBR"))
 
;Delimiters
DECLARE SEPARATOR = VC WITH PROTECT, CONSTANT('"|"')
DECLARE ROW_START = VC WITH PROTECT, CONSTANT('"')
DECLARE ROW_TERMINATE = VC WITH PROTECT, CONSTANT('"')
 
/*=================================================================================================================================
 
                                                            VARIABLES
 
=================================================================================================================================*/
DECLARE Begin_Date = DQ8 WITH PROTECT   ;The start date for the report
DECLARE End_Date = DQ8 WITH PROTECT    ;The final date for the report
DECLARE Temp_Date_DQ8 = DQ8 WITH PUBLIC    ;Temporary date for processing funtions
DECLARE Display_Line = VC WITH PROTECT, NOCONSTANT('') ;Report Display
 
/*=================================================================================================================================
 
                                                           INITIALIZATION
 
=================================================================================================================================*/
CALL ECHO(CONCAT("INITIALIZATION...", FORMAT(CNVTDATETIME(CURDATE, CURTIME3), "@SHORTDATETIME")))
/*----------------------------------------------------  Begin_Date and End_Date -------------------------------------------------*/
execute thc1_apmd_date_conversion $BEGINDATE, "BOD" ;Date, Beginning of Day
SET Begin_Date = Temp_Date_DQ8
execute thc1_apmd_date_conversion $ENDDATE, "EOD" ;Date parameter, End of Day
SET End_Date = Temp_Date_DQ8
 
CALL ECHO(CONCAT("VARIABLE AND CONSTANTS Runtime: ",
                 TRIM(CNVTSTRING(DATETIMEDIFF(CNVTDATETIME(CURDATE, CURTIME3), Section_Start_Dt_Tm, 5)), 3),
                 " seconds"))
 
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
                                                      ED EVENTS SECTION
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
CALL ECHO(CONCAT("ED EVENTS SECTION...", FORMAT(CNVTDATETIME(CURDATE, CURTIME3), "@SHORTDATETIME")))
 
/*=================================================================================================================================
 
                                                       ED EVENTS QUERY
 
=================================================================================================================================*/
SET Section_Start_Dt_Tm = CNVTDATETIME(CURDATE, CURTIME3)
CALL ECHO(CONCAT("ED EVENTS QUERY QUERY...", FORMAT(CNVTDATETIME(CURDATE, CURTIME3), "@SHORTDATETIME")))
 
SELECT INTO VALUE(APMD_ED_LOCATOR_FILE)
   TC.CHECKIN_ID,
   TC.CHECKIN_DT_TM,
   TC.CHECKOUT_DT_TM,
   TEV.DISPLAY_KEY,
   COM.NAME_FULL_FORMATTED,
   REQ.NAME_FULL_FORMATTED,
   ONS.NAME_FULL_FORMATTED,
   INL.NAME_FULL_FORMATTED,
   COLL.NAME_FULL_FORMATTED,
   FIN = CNVTALIAS(FIN.ALIAS, FIN.ALIAS_POOL_CD)
 
FROM
   TRACKING_CHECKIN TC,
   TRACKING_ITEM TI,
   TRACKING_EVENT TE,
   TRACKING_LOCATOR TL,
   ENCNTR_ALIAS FIN
 
PLAN TC WHERE
   TC.CHECKIN_DT_TM >= CNVTDATETIME(Begin_Date)
   AND TC.CHECKIN_DT_TM <= CNVTDATETIME(End_Date)
   AND TC.TRACKING_GROUP_CD = $TRACKING_GROUP_CD
   AND TC.ACTIVE_IND = 1
 
JOIN TI WHERE
   TI.TRACKING_ID = TC.TRACKING_ID
;   AND TI.ENCNTR_ID IN(199538611.00,  199537797.00, 199538595.00, 199537456.00)
   AND TI.ACTIVE_IND = 1
 
JOIN TE WHERE
   TE.TRACKING_ID = TI.TRACKING_ID
   AND TE.ACTIVE_IND = 1
 
JOIN TL WHERE
   TL.TRACKING_ID = TI.TRACKING_ID
 
JOIN FIN WHERE
   FIN.ENCNTR_ID = OUTERJOIN(TI.ENCNTR_ID)
   AND FIN.ENCNTR_ALIAS_TYPE_CD = OUTERJOIN(FIN_NBR_319_CV)
   AND FIN.ACTIVE_IND = OUTERJOIN(1)
   AND FIN.BEG_EFFECTIVE_DT_TM <= OUTERJOIN(CNVTDATETIME(CURDATE, CURTIME))
   AND FIN.END_EFFECTIVE_DT_TM >= OUTERJOIN(CNVTDATETIME(CURDATE, CURTIME))
 
HEAD REPORT
  Display_Line = CONCAT(ROW_START, "PATIENT_CHART_NUMBER",
                        SEPARATOR, "Tracking_Group",
                        SEPARATOR, "Arrive_Date_Time",
                        SEPARATOR, "Depart_Date_Time",
                        SEPARATOR, "Nurse_Unit",
                        SEPARATOR, "Room",
                        SEPARATOR, "Bed",
                        ROW_TERMINATE)
  COL 0  Display_Line
  ROW +1
 
DETAIL
  Display_Line = BUILD(ROW_START, CNVTALIAS(FIN.ALIAS, FIN.ALIAS_POOL_CD),
                       SEPARATOR, UAR_GET_CODE_DISPLAY(TE.TRACKING_GROUP_CD),
                       SEPARATOR, FORMAT(TL.ARRIVE_DT_TM, "@SHORTDATETIMENOSEC"),
                       SEPARATOR, FORMAT(TL.DEPART_DT_TM, "@SHORTDATETIMENOSEC"),
                       SEPARATOR, UAR_GET_CODE_DISPLAY(TL.LOC_NURSE_UNIT_CD),
                       SEPARATOR, UAR_GET_CODE_DISPLAY(TL.LOC_ROOM_CD),
                       SEPARATOR, UAR_GET_CODE_DISPLAY(TL.LOC_BED_CD),
                       ROW_TERMINATE)
  COL 0  Display_Line
  ROW +1
WITH MAXROW = 1, MAXCOL = 32000, NOFORMFEED, FORMAT = UNDEFINED, NULLREPORT
 
CALL ECHO(CONCAT("ED EVENTS QUERY Runtime: ",
                 TRIM(CNVTSTRING(DATETIMEDIFF(CNVTDATETIME(CURDATE, CURTIME3), Section_Start_Dt_Tm, 5)), 3),
                 " seconds"))
 
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
                                                 END
 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
IF (VALIDATE(REPLY->OPS_EVENT) AND VALIDATE(REQUEST->OUTPUT_DIST) AND VALIDATE (REPLY->STATUS_DATA->STATUS))
 ;This code executes inside operations
 ;Declares a successful run
 SET REPLY->STATUS_DATA->STATUS = "S"
ENDIF
 
END GO
